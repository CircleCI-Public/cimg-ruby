version: 2.1

orbs:
  cimg: circleci/cimg@0.6.4
  slack: circleci/slack@4.12.1

parameters:
  cron:
    type: boolean
    default: false
jobs:
  temp-browser:
    executor:
      name: cimg/default
      resource_class: 2xlarge+
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          if [[ -n "$DOCKER_TOKEN" ]]; then
            echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
          else
            echo "WARNING: No docker token set, skipping docker login"
          fi
          docker run --privileged multiarch/qemu-user-static:latest --reset -p yes --credential yes
          echo 'export DOCKER_PASS=$DOCKER_TOKEN' >> "$BASH_ENV"
          chmod +x ./build-images.sh
          ./build-images.sh

workflows:
  automated-wf:
    when: << pipeline.parameters.cron >>
    jobs:
      - cimg/update:
          update-script: rubyFeed.sh
          context:
            - slack-notification-access-token
            - slack-cimg-notifications
            - cpe-image-bot-github-creds
  temp-browser-fixes:
    jobs:
      - temp-browser:
          filters:
            branches:
              only:
                - feat/browser-fix-keys
          context: 
            - slack-notification-access-token
            - slack-cimg-notifications
            - cimg-docker-image-building
            - cimg-docker-image-publishing
  main-wf:
    when:
      not: << pipeline.parameters.cron >>
    jobs:
      - cimg/build-and-deploy:
          name: "Test"
          resource-class: 2xlarge+
          docker-namespace: ccitest
          docker-repository: ruby
          filters:
            branches:
              ignore:
                - main
                - feat/browser-fix-keys
          context: 
            - slack-notification-access-token
            - slack-cimg-notifications
            - cimg-docker-image-building
          post-steps:
            - slack/notify:
                branch_pattern: main
                event: fail
                mentions: "@images"
                template: basic_fail_1
      - cimg/build-and-deploy:
          name: "Deploy"
          resource-class: 2xlarge+
          docker-repository: ruby
          filters:
            branches:
              only:
                - main
          context:
            - slack-notification-access-token
            - slack-cimg-notifications
            - cimg-docker-image-building
            - cimg-docker-image-publishing
          post-steps:
            - slack/notify:
                branch_pattern: main
                event: fail
                mentions: "@images"
                template: basic_fail_1
